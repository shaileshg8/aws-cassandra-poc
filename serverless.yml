service: aws-cassandra-poc
frameworkVersion: ^=1.27.0
provider:
  name: aws
  runtime: python3.6
  memorySize: 1024
  timeout: 120
  stage: "${opt:stage, 'dev'}"
  region: "${opt:region, env:AWS_DEFAULT_REGION, 'us-east-1'}"
  environment:
    DYNAMO_DB_NAME: ${file(./config.yml):dynamo_db_table_name}
    STAGE: "${self:provider.stage}"
    PROFILE_NAME: "${self:custom.profile.${self:provider.stage}, 'nonprod'}"
    SERVERLESS_STAGE: "${self:provider.stage}"
    SERVERLESS_PROJECT: aws-cassandra-poc
    REGION: "${self:provider.region}"
  tags:
    service: aws-cassandra-poc
functions:
  cassandrFunc:
    handler: src/cassandra-func/index.handler
    role: cassandraFuncRole
custom:
  profile:
    dev: nonprod
    preprod: preprod
    prod: prod
  stages:
    - dev
    - preprod
    - prod
resources:
  Resources:
    cassandraFuncRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:provider.region}-${self:provider.stage}-sync-manager-role
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - "lambda.amazonaws.com"
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        Policies:
          - PolicyName: acm-policy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "dynamodb:GetItem"
                  Resource: "*"
